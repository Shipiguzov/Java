package lesson1;

public class FirstLesson {
    // ctrl + / однострочный комментарий
    /*
    crtl+ shift + / многострочный комментарий
    */
    // ctrl + alt + L выравнивание кода

    /*
    точка входа в программу д.б. одна
    с неё начинается выполнение программы
    метод main генерируется набором psvm + Enter
    разделение инструкций происходит ;
    */
    public static void main(String[] args) {
        // консольный вывод System.out.println() (sout + Enter)
        System.out.println("Hello world");
        /*
        Типы данных:
        1. Примитивные типы данных
        2. Ссылочные типы данных

        Примитивные типы данных для целых чисел и их хранение
        */

        // объявление целочисленных переменных
        // тип_данных имя_переменной;
        // имя переменной только с маленькой буквы, если 2а и более слов, то последующие - с большой буквы
        // имя переменной индивидуально в пределах метода

        // тип byte (занимает 1 байт) от -128 .. 127
        byte byteVar; //объявление переменной
        byteVar = 35; //присвоение переменной значение
        byteVar = 10;
        System.out.println("byteVar = " + byteVar);
        // объявление переменной и присвоение сразу ей значения
        byte byteVar2 = 10;
        // запись нескольких переменных одного типа
        byte byteVar3, byteVar4;
        byte byteVar5 = 0, byteVar6 = 96;

        // объявление переменных типа short (2 байта) -32768 до 32767
        short shortVar = -999;

        // объявление переменных типа int (4 байта) весь диапазон 256^4
        int intVar = 1_000_000;
        int intVar2 = 1000000;

        // объявление переменных типа long (8 байт)
        // если по умолчанию воспринимается, как int при присвоении значения переменной. Тогда добавляем L в конце значения
        long longVar = 3_000_000_000L;

        // числа с плавающей точкой

        // float (4 байта)
        float floatVar = 5.7f;

        // double (8 байт). Предпочтительнее для работы (лучше оптимизация)
        double doubleVar = 3.14;

        // char (2 байта) для хранения символа
        // хранит символ юникода
        // от 0 до 256^2

        // boolean логический типа данных
        // true / false
        boolean booleanVar = true;
        boolean booleanVar2 = false;

        // Приведение типов:
        byte someByte = 100;
        // автоматическое преобразование byte в int, а потом присвоение. Типы должны быть совместимы.
        // происходит "увеличение" типа
        int someInt = someByte;

        //явное приведение типов. Отбрасываются старшие биты.
        someInt = 200;
        someByte = (byte)someInt;
        System.out.println(someByte);
        someByte = (byte)199;
        System.out.println(someByte);


        // операторы

        // оператор присваивания
        // =
        // += - прибавить и присвоить
        // -= - отнять и присвоить
        // *= - умножить и присвоить
        // /= - делить и присвоить
        // %= - взять остаток и присвоить
        someByte = 3;
        // someByte = someByte * 7; // результат умножения - int
        someByte *= 7;

        someInt = 10;
        someInt = someInt + 20;
        someInt += 20;

        // арифметические
        // +
        // -
        // /
        // *
        // % - остаток от деления
        // при делении двух целых чисел
        intVar = 7;
        intVar2 = 2;
        int intVar3 = intVar / intVar2;
        System.out.println(intVar3);
        System.out.println(9 % 3);// результат 0
        System.out.println(9 % 2);// результат 1

        int a = 10, b = 90;
        int c = a + b;
        System.out.println(c);
        short x = 56, y = 77;
        // short z = x + y; - результат сложения int
        int result = x + y;
        short z = (short) (x + y);

        // операторы сравнения. Результат всегда boolean
        // <
        // >
        // == - равно
        // <=
        // >=
        // != - неравно
        System.out.println(6 > 20);// false
        System.out.println(6 < 20);// true
        // тернарный оператор ?
        //переменная = (условние) ? выразение_1 : выражение_2
        // условние - проверяется, результат true / false, выражение_1 - для true, выражение_2 - для false
        int k = 4, l = 8;
        int res = (k < l) ? k + l : k - l;

        // деление на 0
        int n = 100;
        double m = 200.6;
        //int intZeroDiv = n / 0;
        //System.out.println(intZeroDiv);
        double doubleZeroDiv = m / 0;
        System.out.println(doubleZeroDiv);
        // целочисленные на 0 не деляться - возникает ошибка
        // при делении на 0 чисел с плавающий точкой - результат - бесконечность или минус бесконечность. Действия с бесконечнотью - ???

        // задача
        /*
        Дана переменная типа int
        если значение переменной четное, терн оператор
        возвращает результат деления этой переменной на 2
        в противном случае результат умножения на 2
        */
        int taskVar1 = 10, taskVar2;
        taskVar2 = taskVar1 % 2;
        taskVar1 = (taskVar2 == 0) ? taskVar1 / 2 : taskVar1 * 2;
        System.out.println(taskVar1);
    }
}